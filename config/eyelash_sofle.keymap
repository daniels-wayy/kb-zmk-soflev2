#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 35    // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    zip_scroll_scaler: zip_scroll_scaler {
        compatible = "zmk,input-processor-scaler";
        #input-processor-cells = <2>;
        type = <INPUT_EV_REL>;
        codes = <INPUT_REL_WHEEL INPUT_REL_HWHEEL>;
        track-remainders;
    };
};

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <0>;      // 0
    time-to-max-speed-ms = <0>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <400>;
    acceleration-exponent = <1>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    behaviors {
    };

    combos {
        compatible = "zmk,combos";

        curly_left_bracket {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <17 16>;
        };

        curly_right_bracket {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <21 22>;
        };

        round_left_bracket {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <30 29>;
        };

        round_right_bracket {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <34 35>;
        };

        square_left_bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <42 43>;
        };

        square_right_bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <47 48>;
        };

        angle_left_bracket {
            bindings = <&kp LESS_THAN>;
            key-positions = <55 54>;
        };

        angle_right_bracket {
            bindings = <&kp GREATER_THAN>;
            key-positions = <61 62>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        lay_0 {
            bindings = <
&kp ESC     &kp N1     &kp N2        &kp N3        &kp N4  &kp N5         &kp UP_ARROW     &kp N6       &kp N7         &kp N8     &kp N9   &kp N0    &kp BACKSPACE
&kp TAB     &kp Q      &kp W         &kp E         &kp R   &kp T          &kp DOWN_ARROW   &kp Y        &kp U          &kp I      &kp O    &kp P     &trans
&kp CAPS    &kp A      &kp S         &kp D         &kp F   &kp G          &kp LEFT_ARROW   &kp H        &kp J          &kp K      &kp L    &kp SEMI  &kp APOS
&kp LSHFT   &kp Z      &kp X         &kp C         &kp V   &kp B          &kp RIGHT_ARROW  &kp N        &kp M          &kp COMMA  &kp DOT  &kp FSLH  &trans
&kp C_MUTE  &kp LCTRL  &kp LEFT_ALT  &kp LEFT_GUI  &mo 1   &lt 2 SPACE    &kp ENTER        &lt 2 ENTER  &kp BACKSPACE  &kp COLON  &trans   &mo 3
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "Layer 0";
        };

        lay_1 {
            bindings = <
&trans      &kp F1           &kp F2            &kp F3                &kp F4          &kp F5           &mmv MOVE_UP     &kp F6            &kp F7           &kp F8                 &kp F9             &kp F10           &kp F11
&trans      &kp EXCLAMATION  &kp AT            &kp HASH              &kp DOLLAR      &kp PERCENT      &mmv MOVE_DOWN   &kp CARET         &kp AMPS         &kp MINUS              &kp PLUS           &trans            &trans
&trans      &trans           &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS  &kp LEFT_BRACE  &kp LESS_THAN    &mmv MOVE_LEFT   &kp GREATER_THAN  &kp RIGHT_BRACE  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &trans            &trans
&trans      &trans           &trans            &trans                &kp PIPE        &trans           &mmv MOVE_RIGHT  &kp ASTERISK      &kp EQUAL        &kp UNDERSCORE         &kp DOUBLE_QUOTES  &kp SINGLE_QUOTE  &trans
&kp C_MUTE  &trans           &trans            &trans                &trans          &trans           &mkp LCLK        &trans            &trans           &trans                 &trans             &trans
            >;

            display-name = "Layer 1";
            sensor-bindings = <&scroll_encoder>;
        };

        lay_2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &mmv MOVE_UP     &trans  &trans    &trans          &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &mmv MOVE_DOWN   &trans  &trans    &kp UP_ARROW    &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &mmv MOVE_LEFT   &trans  &kp LEFT  &kp DOWN_ARROW  &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &mmv MOVE_RIGHT  &trans  &trans    &trans          &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &mkp LCLK        &trans  &trans    &trans          &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
            label = "Layer 2";
        };

        lay_3 {
            bindings = <
&trans      &trans           &trans           &trans           &trans           &trans             &trans  &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_CLR       &bt BT_CLR_ALL
&trans      &trans           &trans           &trans           &trans           &trans             &trans  &trans           &trans           &trans           &trans           &trans           &trans
&trans      &trans           &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SPD  &rgb_ug RGB_SPI    &trans  &rgb_ug RGB_SPI  &rgb_ug RGB_SPD  &rgb_ug RGB_HUI  &rgb_ug RGB_HUD  &trans           &trans
&bl BL_TOG  &rgb_ug RGB_TOG  &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI    &trans  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_TOG  &bl BL_TOG
&trans      &trans           &trans           &trans           &trans           &trans             &trans  &trans           &trans           &trans           &trans           &trans
            >;

            label = "Layer 3";
        };
    };
};
