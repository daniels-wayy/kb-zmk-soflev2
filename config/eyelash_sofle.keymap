#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 35    // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    zip_scroll_scaler: zip_scroll_scaler {
        compatible = "zmk,input-processor-scaler";
        #input-processor-cells = <2>;
        type = <INPUT_EV_REL>;
        codes = <INPUT_REL_WHEEL INPUT_REL_HWHEEL>;
        track-remainders;
    };
};

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <0>;      // 0
    time-to-max-speed-ms = <0>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <400>;
    acceleration-exponent = <1>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    behaviors {
    };

    combos {
        compatible = "zmk,combos";

        command_backspace {
            bindings = <&kp LG(BACKSPACE)>;
            key-positions = <60 35>;
        };

        option_backspace {
            bindings = <&kp LA(BACKSPACE)>;
            key-positions = <60 34>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        lay_0 {
            bindings = <
&kp ESC     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5                  &kp UP_ARROW     &kp NUMBER_6  &kp N7         &kp N8     &kp N9   &kp N0    &trans
&kp TAB     &kp Q         &kp W         &kp E         &kp R         &kp T                   &kp DOWN_ARROW   &kp Y         &kp U          &kp I      &kp O    &kp P     &trans
&kp CAPS    &kp A         &kp S         &kp D         &kp F         &kp G                   &kp LEFT_ARROW   &kp H         &kp J          &kp K      &kp L    &kp SEMI  &kp APOS
&kp LSHFT   &kp Z         &kp X         &kp C         &kp V         &kp B                   &kp RIGHT_ARROW  &kp N         &kp M          &kp COMMA  &kp DOT  &kp FSLH  &kp BACKSLASH
&kp C_MUTE  &kp LCTRL     &kp LEFT_ALT  &kp LEFT_GUI  &mo 1         &mt LEFT_SHIFT SPACE    &kp ENTER        &kp ENTER     &kp BACKSPACE  &mo 2      &trans   &mo 3
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "Layer 0";
        };

        lay_1 {
            bindings = <
&trans      &kp F1           &kp F2        &kp F3        &kp F4        &kp F5         &mmv MOVE_UP     &kp F6         &kp F7            &kp F8          &kp F9                &kp F10                &kp F11
&kp TILDE   &kp EXCLAMATION  &kp AT        &kp HASH      &kp DOLLAR    &kp PERCENT    &mmv MOVE_DOWN   &kp CARET      &kp AMPS          &kp ASTERISK    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PIPE
&trans      &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5         &mmv MOVE_LEFT   &kp LESS_THAN  &kp GREATER_THAN  &kp EQUAL       &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp DOUBLE_QUOTES
&trans      &kp NUMBER_6     &kp NUMBER_7  &kp N8        &kp N9        &kp N0         &mmv MOVE_RIGHT  &kp MINUS      &kp PLUS          &kp COMMA       &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp SINGLE_QUOTE
&kp C_MUTE  &trans           &trans        &kp LG(Z)     &trans        &kp SPACE      &mkp LCLK        &kp SPACE      &kp BACKSPACE     &kp UNDERSCORE  &kp COLON             &trans
            >;

            display-name = "Layer 1";
            sensor-bindings = <&scroll_encoder>;
        };

        lay_2 {
            bindings = <
&trans  &trans  &trans     &trans     &trans     &trans       &mmv MOVE_UP     &trans     &trans         &trans          &trans     &trans      &trans
&trans  &trans  &trans     &trans     &trans     &trans       &mmv MOVE_DOWN   &trans     &trans         &kp UP_ARROW    &trans     &kp DELETE  &trans
&trans  &trans  &kp LG(X)  &kp LG(C)  &kp LG(V)  &trans       &mmv MOVE_LEFT   &trans     &kp LEFT       &kp DOWN_ARROW  &kp RIGHT  &trans      &trans
&trans  &trans  &trans     &trans     &trans     &trans       &mmv MOVE_RIGHT  &trans     &trans         &trans          &trans     &trans      &trans
&trans  &trans  &trans     &trans     &trans     &kp SPACE    &mkp LCLK        &kp SPACE  &kp BACKSPACE  &trans          &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
            label = "Layer 2";
        };

        lay_3 {
            bindings = <
&trans      &trans           &trans           &trans           &trans           &trans             &trans  &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_CLR       &bt BT_CLR_ALL
&trans      &trans           &trans           &trans           &trans           &trans             &trans  &trans           &trans           &trans           &trans           &trans           &trans
&trans      &trans           &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SPD  &rgb_ug RGB_SPI    &trans  &rgb_ug RGB_SPI  &rgb_ug RGB_SPD  &rgb_ug RGB_HUI  &rgb_ug RGB_HUD  &trans           &trans
&bl BL_TOG  &rgb_ug RGB_TOG  &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI    &trans  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_TOG  &bl BL_TOG
&trans      &trans           &trans           &trans           &trans           &trans             &trans  &trans           &trans           &trans           &trans           &trans
            >;

            label = "Layer 3";
        };
    };
};
